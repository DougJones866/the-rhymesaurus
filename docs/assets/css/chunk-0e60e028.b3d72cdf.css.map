{"version":3,"sources":["webpack:///src/views/C:/Users/cell8/Desktop/portfolio/rhymeasaurus/src/views/Adjective.vue"],"names":[],"mappings":"AA8DA,6BACE,gBACF,CACA,kCACE,eAAgB,CAChB,gBAAiB,CACjB,iBAAkB,CAClB,4BAA6B,CAC7B,WAAY,CACZ,gBAAiB,CACjB,aAAc,CACd,eAAgB,CAChB,0BAA+B,CAC/B,aACF,CACA,wBACE,eAAgB,CAChB,aAAe,CACf,eAAgB,CAChB,UAAW,CACX,WAAY,CACZ,cAAe,CACf,gBACF,CACA,wCAEE,eACF,CACA,4BACE,oBAAqB,CACrB,SACF,CACA,6BACE,oBAAqB,CACrB,WAAY,CACZ,qBAAsB,CACtB,aAAe,CACf,WAAY,CACZ,gBAAiB,CACjB,UAAW,CACX,yBACF,CACA,2BACE,oBACF,CACA,4BACE,oBAAqB,CACrB,SAAU,CACV,aAAe,CACf,aACF,CACA,mBACE,aACF","file":"chunk-0e60e028.b3d72cdf.css","sourcesContent":["<template>\n  <div class=\"adjfornoun\">\n    <h2>Adjective</h2>\n    <p><router-link to=\"/rhymesaurus\">Rhymesaurus</router-link></p>\n    <form v-on:submit.prevent=\"findWords\">\n      <p>\n        Find and adjective from a given noun\n        <input type=\"text\" v-model=\"noun\" />\n        <button type=\"submit\">Search</button>\n      </p>\n    </form>\n    <ul class=\"results\" v-if=\"results && results.length > 0\">\n      <li class=\"item\" v-for=\"(item, index) of results\" :key=\"index\">\n        <p>\n          <strong>{{ item.word }}</strong>\n        </p>\n        <p>{{ item.score }}</p>\n      </li>\n    </ul>\n\n    <div class=\"no-results\" v-else-if=\"results && results.length === 0\">\n      <h2>No Words Found</h2>\n      <p>Please adjust your search to find more words.</p>\n    </div>\n\n    <ul class=\"errors\" v-if=\"errors && errors.length > 0\">\n      <li v-for=\"(error, index) of errors\" :key=\"index\">{{ error.message }}</li>\n    </ul>\n  </div>\n</template>\n\n<script>\nimport axios from \"axios\";\n\nexport default {\n  data() {\n    return {\n      results: null,\n      noun: \"\",\n      errors: []\n    };\n  },\n  methods: {\n    findWords: function() {\n      axios\n      .get('https://api.datamuse.com/words', {\n        params: {\n          rel_jjb: this.noun\n        }\n      })\n      .then(response => {\n        this.results = response.data;\n      })\n      .catch(error => {\n        this.errors.push(error);\n      });\n    }\n  }\n};\n</script>\n\n<style scoped>\n.adjfornoun {\n  font-size: 1.4rem;\n}\ninput[type=\"text\"] {\n  border-top: none;\n  border-left: none;\n  border-right: none;\n  border-bottom: 1px solid #333;\n  width: 300px;\n  font-size: 1.4rem;\n  color: #2c3e50;\n  font-weight: 300;\n  background: rgba(0, 0, 0, 0.02);\n  padding: 0.5rem;\n}\nbutton {\n  background: #333;\n  padding: 0.5rem;\n  font-weight: 300;\n  color: #fff;\n  border: none;\n  cursor: pointer;\n  font-size: 1.4rem;\n}\nh1,\nh2 {\n  font-weight: normal;\n}\nul.results {\n  list-style-type: none;\n  padding: 0;\n}\n.results li {\n  display: inline-block;\n  margin: 10px;\n  border: solid 1px #333;\n  padding: 0.5rem;\n  width: 200px;\n  min-height: 100px;\n  color: #fff;\n  background: rgba(0, 0, 0, 0.7);\n}\nul.errors {\n  list-style-type: none;\n}\n.errors li {\n  border: 1px solid red;\n  color: red;\n  padding: 0.5rem;\n  margin: 10px 0;\n}\na {\n  color: #42b983;\n}\n</style>"]}