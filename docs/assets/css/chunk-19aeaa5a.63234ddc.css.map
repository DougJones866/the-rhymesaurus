{"version":3,"sources":["webpack:///src/views/C:/Users/cell8/Desktop/portfolio/rhymeasaurus/src/views/Rhymesaurus.vue"],"names":[],"mappings":"AAqEA,8BACE,gBAAiB,CACjB,wBAAyB,CACzB,iBAAkB,CAClB,wBAA8B,CAC9B,iBACF,CACA,kCACE,eAAgB,CAChB,gBAAiB,CACjB,iBAAkB,CAClB,kBAAmB,CACnB,iBAAkB,CAClB,uBAA6B,CAC7B,WAAY,CACZ,gBAAiB,CACjB,aAAc,CACd,eAAgB,CAEhB,aAAe,CACf,WACF,CACA,wBACE,eAAgB,CAChB,aAAe,CACf,eAAgB,CAChB,UAAW,CACX,WAAY,CACZ,cAAe,CACf,gBACF,CACA,wCAEE,eACF,CACA,4BACE,oBAAqB,CACrB,SACF,CACA,6BACE,oBAAqB,CACrB,WAAY,CACZ,qBAAsB,CACtB,aAAe,CACf,WAAY,CACZ,gBAAiB,CACjB,UAAW,CACX,yBAA8B,CAC9B,iBACF,CACA,2BACE,oBACF,CACA,4BACE,oBAAqB,CACrB,SAAU,CACV,aAAe,CACf,aACF,CACA,mBACE,aACF","file":"chunk-19aeaa5a.63234ddc.css","sourcesContent":["<template>\n  <div class=\"rhymesaurus\">\n    <h2>Rhymesaurus: The Rhyming Thesaurus</h2>\n    <p>\n      <router-link to=\"/\">Adjective For Noun</router-link>\n    </p>\n\n    <form v-on:submit.prevent=\"findWords\">\n      <p>\n        Find rhymes for\n        <input type=\"text\" v-model=\"rhyme\"> related to\n        <input type=\"text\" v-model=\"phrase\">\n        <button type=\"submit\">Search</button>\n      </p>\n    </form>\n\n    <ul class=\"results\" v-if=\"results && results.length > 0\">\n      <li class=\"item\" v-for=\"(item,index) of results\" :key=\"index\">\n        <p>\n          <strong>{{item.word}}</strong>\n        </p>\n        <p>{{item.score}}</p>\n      </li>\n    </ul>\n\n    <div class=\"no-results\" v-else-if=\"results && results.length === 0\">\n      <h2>No Words Found</h2>\n      <p>Please adjust your search to find more words.</p>\n    </div>\n\n    <ul class=\"errors\" v-if=\"errors && errors.length > 0\">\n      <li v-for=\"(error, index) of errors\" :key=\"index\">{{error.message}}</li>\n    </ul>\n  </div>\n</template>\n\n<script>\nimport axios from 'axios';\n\nexport default {\n  data() {\n    return {\n      results: null,\n      errors: [],\n      phrase: \"\",\n      rhyme: \"\",\n    };\n  },\n  methods: {\n    findWords: function() {\n      axios\n      .get(\"https://api.datamuse.com/words\", {\n        params: {\n          ml: this.phrase,\n          rel_rhy: this.rhyme\n        }\n      })\n      .then(response => {\n        this.results = response.data;\n      })\n      .catch(error => {\n        this.errors.push(error);\n      })\n    }\n  }\n}\n</script>\n\n<style scoped>\n.rhymesaurus {\n  font-size: 1.4rem;\n  background-color: #EBAF5C;\n  border-style: none;\n  box-shadow: 0px 0px 15px black;\n  border-radius: 8px;\n}\ninput[type=\"text\"] {\n  border-top: none;\n  border-left: none;\n  border-right: none;\n  border-bottom: none;\n  border-radius: 8px;\n  box-shadow: 0px 0px 5px black;\n  width: 300px;\n  font-size: 1.4rem;\n  color: #2c3e50;\n  font-weight: 300;\n  /* background: rgba(0, 0, 0, 0.02); */\n  padding: 0.5rem;\n  margin: 15px;\n}\nbutton {\n  background: #333;\n  padding: 0.5rem;\n  font-weight: 300;\n  color: #fff;\n  border: none;\n  cursor: pointer;\n  font-size: 1.4rem;\n}\nh1,\nh2 {\n  font-weight: normal;\n}\nul.results {\n  list-style-type: none;\n  padding: 0;\n}\n.results li {\n  display: inline-block;\n  margin: 10px;\n  border: solid 1px #333;\n  padding: 0.5rem;\n  width: 200px;\n  min-height: 100px;\n  color: #fff;\n  background: rgba(0, 0, 0, 0.7);\n  border-radius: 8px;\n}\nul.errors {\n  list-style-type: none;\n}\n.errors li {\n  border: 1px solid red;\n  color: red;\n  padding: 0.5rem;\n  margin: 10px 0;\n}\na {\n  color: #42b983;\n}\n</style>"]}